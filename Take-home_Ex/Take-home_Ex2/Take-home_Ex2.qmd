---
title: "Take-home Ex2"
author: "Jayexx Low"
date: "April 29, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
---

## Introduction

As a follow on to the previous study on Singapore's private property market, this exercise would entail a closer scrutiny on the Data Visualisation (DataViz) done.

For which, one DataViz will be selected, and critiqued based on (a) clarity and (b) aesthetics, prepare a sketch for the alternative design by using the data visualisation design principles and best practices you had learned in Lesson 1 and 2. remake the original design by using ggplot2, ggplot2 extensions and tidyverse packages.

## Getting Started

### Loading Required R Package Libraries

The code chunk below load the following libraries:

-   tidyverse: an amalgamation of libraries for data handling (including ggplot2, dplyr, tidyr, readr, tibble)
-   knitr: for creating dynamic html tables/reports
-   ggridges: extension of ggplot2 designed for plotting ridgeline plots
-   ggdist: extension of ggplot2 designed for visualising distribution and uncertainty,
-   colorspace: provides a broad toolbox for selecting individual colors or color palettes, manipulating these colors, and employing them in various kinds of visualisations.
-   ggrepel: provides geoms for ggplot2 to repel overlapping text labels.
-   ggthemes: provides additional themes, geoms, and scales for ggplot package
-   hrbrthemes: provides typography-centric themes and theme components for ggplot package
-   patchwork: preparing composite figure created using ggplot package
-   lubridate: for wrangling of date-time data

```{r}
pacman::p_load(tidyverse, knitr, ggridges, ggdist, colorspace, ggrepel, ggthemes, hrbrthemes, patchwork, lubridate) 
```

### Importing the Data

The code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package, which is part of the tidyverse package.

```{r}
Realis24Q1 <- read_csv("data/ResidentialTrx2024q1.csv")
Realis23Q4 <- read_csv("data/ResidentialTrx2023q4.csv")
Realis23Q3 <- read_csv("data/ResidentialTrx2023q3.csv")
Realis23Q2 <- read_csv("data/ResidentialTrx2023q2.csv")
Realis23Q1 <- read_csv("data/ResidentialTrx2023Q1.csv")
```

## Selected DataViz

Comparison of Transacted prices across Q1 of 2023 and 2024

https://peishan0502-isss608.netlify.app/take-home_ex/take-home_ex01/take-home_ex01#compare-transacted-price-by-type-of-sale

![](images/unnamed-chunk-28-1.png)

## Critique

### Clarity

- poor logic in removing outliers
- wrong representation of prices since the data points for multiple-unit transactions was not averaged to find the price per unit
- Near impossible to read and compare the position of the median given (a) the wide tick intervals in the y-axis and (b) the extremely compressed box plot even after excluding some outliers
- Misalignment of y-axis impeding the comparison between the 2 box plots
- Arrangement of the boxplots by quarters also impedes the comparison of sub-market components between the 2 quarters

### Aesthetics

- consider to use other themes other than default in order to...
- fig-size
- font size

## Recommended Makeover

To addrress the aforesaid critique, the following alternatives are suggested

1.  Reassess outliers and Re-clean Data, by choosing 1 of the following options:
(a) Remove all multiple-unit transactions, 
(b) Use PSF instead of Transacted Price, or 
(c) Derive  a new variable Price per unit by dividing the variable 'Transacted price ($)' by the variable 'Number of Units'

2. 